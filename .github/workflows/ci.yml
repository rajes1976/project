name: CI_CD Pipeline

on:
  push:
    branches:
      - master
          
  pull_request:
    branches:
      - master

jobs:
  Continuous-Integration:
    runs-on: ubuntu-latest

    outputs:
      release_tag: ${{ steps.get_tag.outputs.tag }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1   
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Install Docker Compose
      run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
   
    - name: Validate configuration
      run: docker-compose -f docker-compose.dev.yml config
      
    - name: Run Docker Compose
      run: docker-compose -f docker-compose.dev.yml up -d
      
    - name: Test network connectivity
      run: |
        docker-compose -f docker-compose.dev.yml up -d
        sleep 10
        docker exec proxy-server curl -I http://webserver

      #Nieuwe stap: bump versie en maak git tag aan
    - name: Bump version and push tag
      uses: mathieudutour/github-tag-action@v6.1
      with:
         github_token: ${{ secrets.GITHUB_TOKEN }}
         default_bump: patch # of 'minor' / 'major'

      #Nieuwe stap: haal de nieuwste tag op voor Docker image
    - name: Get latest tag
      id: get_tag
      run: |
        git fetch --tags
        TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        echo "tag=$TAG" >> $GITHUB_OUTPUT
    
    - name: Tag Docker Images
      run: |
        docker tag project_webserver rajes1976/webserver:${{ steps.get_tag.outputs.tag }}
        docker tag project_nodejs rajes1976/nodejs:${{ steps.get_tag.outputs.tag }}
    
    - name: Push Docker Images to Docker Hub
      run: |
        docker push rajes1976/webserver:${{ steps.get_tag.outputs.tag }}
        docker push rajes1976/nodejs:${{ steps.get_tag.outputs.tag }}
    
   
        
  Continuous-Delivery:
    needs: Continuous-Integration
    runs-on: self-hosted
 
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        
      - name: Run docker-compose
        run: RELEASE_VERSION=${{ needs.Continuous-Integration.outputs.release_tag }} docker-compose -f docker-compose.deploy.yml up -d
