name: CI_CD Pipeline

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

jobs:
  Continuous-Integration:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1   

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version

    - name: Validate configuration
      run: docker-compose config

    - name: Run Docker Compose
      run: docker-compose up -d

    - name: List Docker images
      run: docker images

    # Automatically create a Git tag (v1.0.0 hardcoded for now)
    - name: Create Git Tag
      if: github.ref == 'refs/heads/master'
      run: |
        TAG_EXISTS=$(git tag --contains HEAD)
        if [ -z "$TAG_EXISTS" ]; then
          NEW_TAG="v1.0.0"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag $NEW_TAG
          git push origin $NEW_TAG
        else
          echo "Tag already exists: $TAG_EXISTS"
        fi

    # Fetch latest tag to use for Docker image versioning
    - name: Get latest Git tag
      id: get_tag
      run: |
        TAG=$(git describe --tags --abbrev=0)
        echo "tag=$TAG" >> $GITHUB_OUTPUT

    - name: Tag Docker Images with Git tag
      run: |
        docker tag project_webserver rajes1976/web:${{ steps.get_tag.outputs.tag }}
        docker tag project_nodejs rajes1976/jsweb:${{ steps.get_tag.outputs.tag }}

    - name: Push Docker Images to Docker Hub
      run: |
        docker push rajes1976/web:${{ steps.get_tag.outputs.tag }}
        docker push rajes1976/jsweb:${{ steps.get_tag.outputs.tag }}

    - name: Test network connectivity
      run: |
        docker-compose up -d
        sleep 10
        docker exec proxy-server curl -I http://webserver

  Continuous-Delivery:
    needs: Continuous-Integration
    runs-on: self-hosted

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Run docker-compose
        run: docker-compose up -d
