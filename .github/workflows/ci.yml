name: CI_CD Pipeline

on:
  push:
    branches:
      - testcicd
  pull_request:
    branches:
      - testcicd

jobs:
  Continuous-Integration:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1   
    
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    - name: Install Docker Compose
      run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
           
    - name: List Docker images
      run: docker images
           
    - name: Push Docker Images to Docker Hub
      run: |
        docker pull rajes1976/web:webserver-v1
        docker pull rajes1976/jsweb:jsapp-v1

    - name: Validate configuration
      run: docker-compose config
    
    - name: Run Docker Compose
      run: docker-compose up -d

    - name: Test network connectivity
      run: |
        docker-compose up -d
        sleep 10
        docker exec proxy-server curl -I http://webserver
        
  Continuous-Delivery:
    needs: Continuous-Integration
    runs-on: self-hosted
 
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
       
      - name: Run docker-compose
        run: docker-compose up -d

  Release-project:
    name: Create Release
    needs: Continuous-Delivery
    runs-on: ubuntu-latest
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
     
      - name: Archive site content
        uses: thedoctor0/zip-release@master  
        with:
          filename: project.zip
      
      - name: Create GitHub release
        id: create-new-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
      
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-new-release.outputs.upload_url }}
          asset_path: ./project.zip
          asset_name: Project-v${{ github.run_number }}.zip
          asset_content_type: application/zip         
